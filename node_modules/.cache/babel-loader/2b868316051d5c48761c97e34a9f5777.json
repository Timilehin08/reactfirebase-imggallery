{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore } from '../firebase/config';\n\nconst useStorage = file => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    //references \n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.ref('images');\n    storageRef.put(file).on('state_changed', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100;\n      setProgress(percentage);\n    }, err => {\n      setError(err);\n    }, async () => {\n      const url = await storageRef.getDownloadURL();\n      collectionRef.add({});\n      setUrl(url);\n    });\n  }, [file]);\n  return {\n    progress,\n    url,\n    error\n  };\n};\n\nexport default useStorage;","map":{"version":3,"sources":["C:/Users/HP/Desktop/fogogram/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","projectFirestore","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","collectionRef","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","add"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,oBAAjD;;AAEA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,GAAD,EAAMC,MAAN,IAAgBX,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMW,UAAU,GAAGV,cAAc,CAACW,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAnB;AACJ,UAAMC,aAAa,GAAGZ,gBAAgB,CAACU,GAAjB,CAAqB,QAArB,CAAtB;AAEID,IAAAA,UAAU,CAACI,GAAX,CAAeX,IAAf,EAAqBY,EAArB,CAAwB,eAAxB,EAA0CC,IAAD,IAAU;AAC/C,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACG,UAA9B,GAA4C,GAA7D;AACAd,MAAAA,WAAW,CAACY,UAAD,CAAX;AACH,KAHD,EAGIG,GAAD,IAAS;AACRb,MAAAA,QAAQ,CAACa,GAAD,CAAR;AACH,KALD,EAKG,YAAW;AACV,YAAMZ,GAAG,GAAG,MAAME,UAAU,CAACW,cAAX,EAAlB;AACNR,MAAAA,aAAa,CAACS,GAAd,CAAkB,EAAlB;AACMb,MAAAA,MAAM,CAACD,GAAD,CAAN;AACH,KATD;AAUH,GAfQ,EAeN,CAACL,IAAD,CAfM,CAAT;AAiBA,SAAO;AAAEC,IAAAA,QAAF;AAAYI,IAAAA,GAAZ;AAAiBF,IAAAA;AAAjB,GAAP;AAEH,CAxBD;;AA0BA,eAAeJ,UAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { projectStorage, projectFirestore } from '../firebase/config';\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        //references \r\n        const storageRef = projectStorage.ref(file.name);\r\n\t\t\t\tconst collectionRef = projectFirestore.ref('images');\r\n\r\n        storageRef.put(file).on('state_changed', (snap) => {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setProgress(percentage);\r\n        }, (err) => {\r\n            setError(err);\r\n        }, async() => {\r\n            const url = await storageRef.getDownloadURL();\r\n\t\t\t\t\t\tcollectionRef.add({})\r\n            setUrl(url);\r\n        })\r\n    }, [file]);\r\n\r\n    return { progress, url, error }\r\n\r\n}\r\n\r\nexport default useStorage;"]},"metadata":{},"sourceType":"module"}